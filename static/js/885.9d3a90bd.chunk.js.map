{"version":3,"file":"static/js/885.9d3a90bd.chunk.js","mappings":"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","sources":["api.jsx","components/defaultImage.jsx","components/Cast/CastRender.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.params = { api_key: 'c3e93d2701a24d60026f1c10cdb5f49e' };\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovieList() {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data;\n}\n\nexport async function fetchMovieSearch(searchQuery) {\n  const response = await axios.get(`search/movie?query=${searchQuery}`);\n  return response.data;\n}\n\nexport const fetchImageById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?&language=en-US`);\n  return response.data;\n};\n\nexport async function fetchImageCredits(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  return response.data;\n}\n\nexport async function fetchImageReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  return response.data;\n}\n","const defaultImgURL = `https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700`;\nconst poster = url => {\n  return url ? `https://image.tmdb.org/t/p/w500${url}` : defaultImgURL;\n};\nexport default poster;\n","import poster from '../defaultImage';\n\nconst CastRender = ({ cast: { profile_path, name, character }, id }) => {\n  return (\n    <li key={id}>\n      <img src={poster(profile_path)} alt=\"Actor\" width={'250px'} />\n      <h3>{name}</h3>\n      <p>Character: {character}</p>\n    </li>\n  );\n};\n\nexport default CastRender;\n","import styled from 'styled-components';\n\nexport const StyleUl = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchImageCredits } from 'api';\nimport { toast } from 'react-toastify';\nimport CastRender from './CastRender';\nimport { StyleUl } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchFilms() {\n      try {\n        const responseCast = await fetchImageCredits(movieId);\n        setCast(responseCast.cast);\n      } catch (error) {\n        toast.error('Request is not found!');\n      }\n    }\n    fetchFilms();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <div>\n          <StyleUl>\n            {cast.map((actor, id) => {\n              return <CastRender cast={actor} index={id} />;\n            })}\n          </StyleUl>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["fetchMovieList","_fetchMovieList","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee2","response","_context2","prev","next","axios","sent","abrupt","data","stop","fetchMovieSearch","_x","_fetchMovieSearch","_callee3","searchQuery","_context3","concat","api_key","fetchImageById","_ref","_callee","movieId","_context","_x2","fetchImageCredits","_x3","_fetchImageCredits","_callee4","_context4","fetchImageReviews","_x4","_fetchImageReviews","_callee5","_context5","url","_ref$cast","cast","profile_path","name","character","id","_jsxs","children","_jsx","src","poster","alt","width","StyleUl","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","setCast","useParams","useEffect","_fetchFilms","responseCast","t0","toast","fetchFilms","_Fragment","map","actor","CastRender","index"],"sourceRoot":""}