{"version":3,"file":"static/js/686.55c47e82.chunk.js","mappings":"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","sources":["api.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/MovieCard.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.params = { api_key: 'c3e93d2701a24d60026f1c10cdb5f49e' };\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovieList() {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data;\n}\n\nexport async function fetchMovieSearch(searchQuery) {\n  const response = await axios.get(`search/movie?query=${searchQuery}`);\n  return response.data;\n}\n\nexport const fetchImageById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?&language=en-US`);\n  return response.data;\n};\n\nexport async function fetchImageCredits(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  return response.data;\n}\n\nexport async function fetchImageReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  return response.data;\n}\n","import styled from 'styled-components';\n\nexport const Load = styled.div`\n  margin: auto;\n`;\n","import { Audio } from 'react-loader-spinner';\nimport { Load } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <Load>\n        <Audio height=\"80\" width=\"80\" radius=\"9\" color=\"green\" />\n      </Load>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div``;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n","import { useState } from 'react';\nimport { Wrapper, Input, Button, Form } from './Searchbar.styled';\n\nconst Searchbar = ({ onChange }) => {\n  const [query, setQuery] = useState('');\n\n  const inputRequest = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    if (!query.trim()) {\n      return;\n    }\n    onChange(query);\n    setQuery('');\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleChange}>\n        <Input\n          name=\"searchMovies\"\n          type=\"text\"\n          required\n          placeholder=\"Search movies\"\n          value={query}\n          onChange={inputRequest}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </Wrapper>\n  );\n};\nexport default Searchbar;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MovieCard = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <main>\n      <ul>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n};\n\nexport default MovieCard;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieSearch } from 'api';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MovieCard from 'components/MovieCard';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    async function movieRequest() {\n      try {\n        const response = await fetchMovieSearch(searchQuery);\n        setSearchMovies(response.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    movieRequest();\n  }, [searchQuery]);\n\n  const requestUpdate = query => {\n    const update = query !== '' && { query };\n    setSearchParams(update);\n  };\n\n  return (\n    <>\n      <Searchbar value={searchQuery} onChange={requestUpdate} />\n      <MovieCard movies={searchMovies} />\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["fetchMovieList","_fetchMovieList","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee2","response","_context2","prev","next","axios","sent","abrupt","data","stop","fetchMovieSearch","_x","_fetchMovieSearch","_callee3","searchQuery","_context3","concat","api_key","fetchImageById","_ref","_callee","movieId","_context","_x2","fetchImageCredits","_x3","_fetchImageCredits","_callee4","_context4","fetchImageReviews","_x4","_fetchImageReviews","_callee5","_context5","Load","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","Audio","height","width","radius","color","Wrapper","Input","_templateObject2","Button","_templateObject3","Form","_templateObject4","onChange","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","event","preventDefault","trim","name","type","required","placeholder","value","target","movies","location","useLocation","map","movie","Link","to","id","state","from","title","_searchParams$get","searchMovies","setSearchMovies","_useState3","_useState4","loading","setLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","_movieRequest","results","t0","console","log","finish","movieRequest","_Fragment","Searchbar","MovieCard"],"sourceRoot":""}